<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4018.5">
  <POU Name="Server" Id="{bdc2badc-4b75-489c-8424-75dd34048939}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Server
VAR_INPUT
	sLocalHost         : T_IPv4AddR;
	nLocalPort         : UDINT;         
    bConnectEnable     : BOOL;  
	bRestart_Connect   : BOOL;        
	bSendExecute       : BOOL;
	sSendData          : SEND_CMD_DATA;//STRING(255);
END_VAR
VAR_OUTPUT
	eState             : E_SocketConnectionState;
	bReceiveDone       : BOOL;
	sReceiveData       : REC_CMD_DATA;//STRING(255);
END_VAR
VAR
	bCreateServerHnd   : BOOL;
	bRestart_Connect_Flag : BOOL;
	FB_Connection      : FB_ServerClientConnection;
	FB_SocketSend      : FB_SocketSend;
	FB_SocketReceive   : FB_SocketReceive;
	FB_SocketClose     : FB_SocketClose;
	
	sSrvNetID          : T_AmsNetID:='';
	hServer            : T_HSERVER;
	hSocket            : T_HSOCKET;
	sRemoteHost        : T_IPv4Addr;
	nRemoteport        : UDINT;
	sSendDataTemp      : SEND_CMD_DATA;//STRING(255);	
	sSendDataInit      : SEND_CMD_DATA;
	sReceiveDataTemp   : REC_CMD_DATA;//STRING(255);
	sReceiveDataInit   : REC_CMD_DATA;
	
	nState             : INT;
	tSendDalay         : TON;
	tReceiveDalay      : TON;
	tRestartDalay      : TON;
	SendRtrig          : R_TRIG;
	RestartRtrig       : R_TRIG;
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[tRestartDalay(IN:= (bRestart_Connect AND hSocket.handle >0) , PT:= T#2S);
RestartRtrig(CLK:= tRestartDalay.Q );
IF RestartRtrig.Q THEN
	bRestart_Connect_Flag := TRUE;
END_IF

bCreateServerHnd:= F_CreateServerHnd(
										sSrvNetID:=sSrvNetID , 
										sLocalHost:=sLocalHost , 
										nLocalPort:=nLocalPort , 
										nMode:=LISTEN_MODE_CLOSEALL OR CONNECT_MODE_ENABLEDBG , 
										bEnable:=TRUE , 
										hServer:=hServer );

FB_Connection(
	hServer:=hServer , 
	eMode:=eACCEPT_ALL , 
	sRemoteHost:=sRemoteHost , 
	nRemotePort:=nRemoteport , 
	bEnable:=bConnectEnable AND bCreateServerHnd AND (NOT FB_SocketClose.bBusy) , 
	tReconnect:=T#1S , 
	bBusy=> , 
	bError=> , 
	nErrID=> , 
	hSocket=>hSocket , 
	eState=>eState );
	
FB_SocketSend(
	sSrvNetId:=sSrvNetID , 
	hSocket:=hSocket , 
	cbLen:=SIZEOF(sSendDataTemp), 
	pSrc:=ADR(sSendDataTemp) , 
	bExecute:= , 
	tTimeout:=T#5S , 
	bBusy=> , 
	bError=> , 
	nErrId=> );

FB_SocketReceive(
	sSrvNetId:=sSrvNetID , 
	hSocket:=hSocket , 
	cbLen:=SIZEOF(sReceiveDataTemp) , 
	pDest:=ADR(sReceiveDataTemp) , 
	bExecute:= , 
	tTimeout:=T#5S , 
	bBusy=> , 
	bError=> , 
	nErrId=> , 
	nRecBytes=> );
	
FB_SocketClose(
	sSrvNetId:=sSrvNetID , 
	hSocket:=hSocket , 
	bExecute:= , 
	tTimeout:=T#5S , 
	bBusy=> , 
	bError=> , 
	nErrId=> );
	
CASE nState OF
	0: 
		IF bRestart_Connect_Flag THEN
			bRestart_Connect_Flag:= FALSE;
			FB_SocketClose.bExecute:= FALSE;
			nState:= 10;
		ELSE
			bRestart_Connect_Flag:= FALSE;
			nState:=1;
		END_IF
	1:
		IF hSocket.handle > 0 AND (eState = eSocket_Connected) THEN
			tReceiveDalay(IN:=NOT tReceiveDalay.Q , PT:=T#10MS , Q=> , ET=> );	
			IF tReceiveDalay.Q THEN
				tReceiveDalay(IN:=FALSE);
				FB_SocketReceive.bExecute:=TRUE;
				nState:=2;
			END_IF
		END_IF
	2:
		FB_SocketReceive.bExecute:=FALSE;
		IF NOT FB_SocketReceive.bBusy THEN
			IF NOT FB_SocketReceive.bError THEN
				IF FB_SocketReceive.nRecBytes <> 0 THEN
					sReceiveData:=sReceiveDataInit;
					sReceiveData:=sReceiveDataTemp;//LEFT(cReceiveDataTemp,UDINT_TO_INT(FB_SocketReceive.nRecBytes));
					bReceiveDone:=TRUE;
					nState:=0;
				ELSE
					bReceiveDone:= FALSE;				
					sReceiveDataTemp:= sReceiveDataInit;
					nState:= 0;
				END_IF
			ELSE 
				FB_SocketClose.bExecute:=FALSE;
				nState :=10;
			END_IF
		END_IF
	10:
		FB_SocketClose.bExecute:=TRUE;
		nState :=20;
	20:
		IF FB_SocketClose.bBusy THEN
			IF FB_SocketClose.bError THEN
				nState:=0;
			ELSE
				nState:=10;
			END_IF
			FB_SocketClose.bExecute:=FALSE;
		END_IF
		
END_CASE

//tSendDalay(IN:=NOT tSendDalay.Q , PT:=T#200MS , Q=> , ET=> );
SendRtrig(CLK:=bSendExecute);
IF SendRtrig.Q AND (NOT FB_SocketSend.bBusy) THEN
	sSendDataTemp:=sSendDataInit;
	sSendDataTemp:=sSendData;
	FB_SocketSend.bExecute:=TRUE;
ELSE
	FB_SocketSend.bExecute:=FALSE;
END_IF ]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>