<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4018.5">
  <POU Name="Queue_Contrl" Id="{18df4c79-b4d4-4ada-89d5-94ef81cb7de9}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Queue_Contrl
VAR
(*___________________________________REC QUEUE______________________________________*)
	REC_Queue_List        : ARRAY[0..Param_Queue.MAX_QUEUE_SIZE] OF REC_CMD_DATA;
	Rec_Queue             : Rec_Queue;
	//Insert_Queue          : REC_CMD_DATA;
	Pop_Queue             : REC_CMD_DATA;
	Head_Queue            : REC_CMD_DATA;
	InsertR_TRIG          : R_TRIG;
	PopR_TRIG             : R_TRIG;
	InitR_TRIG            : R_TRIG;
	Queue_Cnt             : INT;
	bInsert               : BOOL;
	bPop                  : BOOL;
	bQinit                : BOOL;
	Queue_Err             : BOOL;
	QisFull               : BOOL;
	QisEmpty              : BOOL;	

END_VAR
VAR_INPUT
	Insert_Queue          : REC_CMD_DATA;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[Rec_Queue(REC_Queue_List:= REC_Queue_List , Err_Out=> Queue_Err );

Queue_Cnt:= Rec_Queue.Count_Queue();
Head_Queue:= Rec_Queue.Head_Queue();
QisFull:= Rec_Queue.Full_Queue();
QisEmpty:= Rec_Queue.Empty_Queue();

InsertR_TRIG(CLK:= bInsert);
IF InsertR_TRIG.Q THEN
	Rec_Queue.Insert_Queue(Insert_Queue:= Insert_Queue );
END_IF

PopR_TRIG(CLK:= bPop);
IF PopR_TRIG.Q THEN
	Pop_Queue:= Rec_Queue.Delete_Queue();
END_IF

InitR_TRIG(CLK:= bQinit);
IF InitR_TRIG.Q THEN
	Rec_Queue.Init_Queue();
END_IF]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>